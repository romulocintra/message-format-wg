Message ::= (s? Declaration)* s? Body s?

Declaration ::= 'let' s Variable s? '=' s? '{' s? Expression s? '}'
Body ::= Pattern | Selector (s? Variant)+

Pattern ::= '{' (Text | Placeholder)* '}'
Selector ::= 'match' (s? '{' s? Expression s? '}')+
Variant ::= 'when' (s Key)+ s? Pattern
Key ::= Nmtoken | Literal | '*'

Placeholder ::= '{' s? (Expression | Markup | MarkupEnd) s? '}'

Expression ::= (Literal | Variable) (s Annotation)? | Annotation
Annotation ::= Function (s Option)*
Option ::= Name s? '=' s? (Literal | Nmtoken | Variable)

Markup ::= MarkupStart (s Option)*

<?TOKENS?>

/* Text */
Text ::= (TextChar | TextEscape)+
TextChar ::= AnyChar - ('{' | '}' | Esc)
AnyChar ::= [#x0-#x10FFFF] - [#xD800-#xDFFF]

/* Names */
Variable ::= '$' Name
Function ::= ':' Name
MarkupStart ::= '+' Name
MarkupEnd ::= '-' Name
Name ::= NameStart NameChar*
Nmtoken ::= NameChar+
NameStart ::= [a-zA-Z] | "_"
            | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF]
            | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D]
            | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF]
            | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
NameChar ::= NameStart | [0-9] | "-" | "." | #xB7
           | [#x0300-#x036F] | [#x203F-#x2040]

/* Literals */
Literal ::= '(' (LiteralChar | LiteralEscape)* ')'
LiteralChar ::= AnyChar - ('(' | ')' | Esc)

/* Escape sequences */
Esc ::= '\'
TextEscape ::= Esc Esc | Esc '{' | Esc '}'
LiteralEscape ::= Esc Esc | Esc '(' | Esc ')'

/* White space */
s ::= (#x9 | #xD | #xA | #x20)+
